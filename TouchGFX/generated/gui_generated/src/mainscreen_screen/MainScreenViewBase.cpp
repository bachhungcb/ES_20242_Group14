/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/mainscreen_screen/MainScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainScreenViewBase::MainScreenViewBase() :
    flexButtonCallback(this, &MainScreenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &MainScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    image1.setXY(-26, -71);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_BACKGROUNDS_272X480_METEOR_RAIN_ID));
    add(image1);

    flexButton1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_HOME_50_50_000000_SVG_ID));
    flexButton1.setIconXY(0, 0);
    flexButton1.setAction(flexButtonCallback);
    flexButton1.setPosition(190, 270, 50, 50);
    add(flexButton1);

    dot9.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot9.setBitmapXY(0, 0);
    dot9.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot9.setIconXY(6, 6);
    dot9.setAction(flexButtonCallback);
    dot9.setPosition(169, 210, 60, 60);
    add(dot9);

    dot8.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot8.setBitmapXY(0, 0);
    dot8.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot8.setIconXY(6, 6);
    dot8.setAction(flexButtonCallback);
    dot8.setPosition(92, 210, 60, 60);
    add(dot8);

    dot7.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot7.setBitmapXY(0, 0);
    dot7.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot7.setIconXY(6, 6);
    dot7.setAction(flexButtonCallback);
    dot7.setPosition(11, 210, 60, 60);
    add(dot7);

    dot6.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot6.setBitmapXY(0, 0);
    dot6.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot6.setIconXY(6, 6);
    dot6.setAction(flexButtonCallback);
    dot6.setPosition(169, 141, 60, 60);
    add(dot6);

    dot5.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot5.setBitmapXY(0, 0);
    dot5.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot5.setIconXY(6, 6);
    dot5.setAction(flexButtonCallback);
    dot5.setPosition(92, 141, 60, 60);
    add(dot5);

    dot4.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot4.setBitmapXY(0, 0);
    dot4.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot4.setIconXY(6, 6);
    dot4.setAction(flexButtonCallback);
    dot4.setPosition(11, 141, 60, 60);
    add(dot4);

    dot3.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot3.setBitmapXY(0, 0);
    dot3.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot3.setIconXY(6, 6);
    dot3.setAction(flexButtonCallback);
    dot3.setPosition(169, 70, 60, 60);
    add(dot3);

    dot2.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot2.setBitmapXY(0, 0);
    dot2.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot2.setIconXY(6, 6);
    dot2.setAction(flexButtonCallback);
    dot2.setPosition(92, 70, 60, 60);
    add(dot2);

    dot1.setBitmaps(Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_NORMAL_ID), Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_OUTLINE_PRESSED_ID));
    dot1.setBitmapXY(0, 0);
    dot1.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_CIRCLE_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
    dot1.setIconXY(6, 6);
    dot1.setAction(flexButtonCallback);
    dot1.setPosition(11, 70, 60, 60);
    add(dot1);

    registerBtn.setXY(-26, -10);
    registerBtn.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    registerBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_HKFS));
    registerBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    registerBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    registerBtn.setAction(buttonCallback);
    add(registerBtn);

    confirmBtn.setXY(115, -10);
    confirmBtn.setBitmaps(touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID), touchgfx::Bitmap(BITMAP_CLAY_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID));
    confirmBtn.setLabelText(touchgfx::TypedText(T___SINGLEUSE_CGNR));
    confirmBtn.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    confirmBtn.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    confirmBtn.setAction(buttonCallback);
    add(confirmBtn);

    deleteBtn.setIconBitmaps(Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DELETE_FOREVER_50_50_E8F6FB_SVG_ID), Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DELETE_FOREVER_50_50_000000_SVG_ID));
    deleteBtn.setIconXY(-3, 0);
    deleteBtn.setAction(flexButtonCallback);
    deleteBtn.setPosition(0, 275, 41, 45);
    add(deleteBtn);
}

MainScreenViewBase::~MainScreenViewBase()
{

}

void MainScreenViewBase::setupScreen()
{

}

void MainScreenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction1
        //When flexButton1 clicked change screen to HomeScreen
        //Go to HomeScreen with no screen transition
        application().gotoHomeScreenScreenNoTransition();
    }
    if (&src == &dot1)
    {
        //Interaction2
        //When dot1 clicked call virtual function
        //Call dot1Selected
        dot1Selected();
    }
    if (&src == &dot2)
    {
        //Interaction3
        //When dot2 clicked call virtual function
        //Call dot2Selected
        dot2Selected();
    }
    if (&src == &dot3)
    {
        //Interaction7
        //When dot3 clicked call virtual function
        //Call dot3Selected
        dot3Selected();
    }
    if (&src == &dot4)
    {
        //Interaction8
        //When dot4 clicked call virtual function
        //Call dot4Selected
        dot4Selected();
    }
    if (&src == &dot5)
    {
        //Interaction9
        //When dot5 clicked call virtual function
        //Call dot5Selected
        dot5Selected();
    }
    if (&src == &dot6)
    {
        //Interaction10
        //When dot6 clicked call virtual function
        //Call dot6Selected
        dot6Selected();
    }
    if (&src == &dot7)
    {
        //Interaction11
        //When dot7 clicked call virtual function
        //Call dot7Selected
        dot7Selected();
    }
    if (&src == &dot8)
    {
        //Interaction12
        //When dot8 clicked call virtual function
        //Call dot8Selected
        dot8Selected();
    }
    if (&src == &dot9)
    {
        //Interaction13
        //When dot9 clicked call virtual function
        //Call dot9Selected
        dot9Selected();
    }
    if (&src == &deleteBtn)
    {
        //Interaction15
        //When deleteBtn clicked call virtual function
        //Call deletePattern
        deletePattern();
    }
}

void MainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &registerBtn)
    {
        //Interaction5
        //When registerBtn clicked change screen to CustomScreen
        //Go to CustomScreen with no screen transition
        application().gotoCustomScreenScreenNoTransition();
    }
    if (&src == &confirmBtn)
    {
        //Interaction6
        //When confirmBtn clicked call virtual function
        //Call confirmPattern
        confirmPattern();
    }
}
